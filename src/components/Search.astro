---
// Inspired by -> https://github.com/chrismwilliams/astro-theme-cactus/blob/main/src/components/Search.astro
import '@pagefind/default-ui/css/ui.css';
import { Icon } from 'astro-icon/components';
---

<site-search id="search" class="ms-auto">
  <button 
    data-open-modal 
    class="flex items-center justify-center rounded-md gap-1 pr-4 p-0 text-muted-foreground hover:scale-125 dark:hover:text-primary"
  >
    <Icon name="lucide:search" class="w-5 h-5" />
  </button>
  <dialog
    aria-label="search"
    class="h-full max-h-full w-full max-w-full border border-zinc-400 bg-white dark:bg-[#0a0910ec] shadow backdrop:backdrop-blur sm:mx-auto sm:mb-auto sm:mt-16 sm:h-max sm:max-h-[calc(100%-8rem)] sm:min-h-[15rem] sm:w-5/6 sm:max-w-[48rem] sm:rounded-md"
  >
    <div class="dialog-frame flex flex-col gap-4 p-6 pt-12 sm:pt-6">
      <button
        data-close-modal
        class="ms-auto cursor-pointer rounded-full bg-black text-white px-4 py-2 dark:bg-white dark:text-black"
      >
        Close
      </button>
      <div class="search-container dark:text-white">
        <div id="pagefind__search" />
      </div>
    </div>
  </dialog>
</site-search>

<script>
  class SiteSearch extends HTMLElement {
    constructor() {
      super();
      
      const openBtn = this.querySelector<HTMLButtonElement>('button[data-open-modal]');
      const closeBtn = this.querySelector<HTMLButtonElement>('button[data-close-modal]');
      const dialog = this.querySelector('dialog');
      const dialogFrame = this.querySelector('.dialog-frame');

      const onWindowClick = (event) => {
        // make sure the click is outside the of the dialog
        if (dialog.open && !dialogFrame.contains(event.target)) {
          closeModal();
        }
      };

      const handleEscKey = (e) => {
        if (e.key === 'Escape' && dialog.open) {
          closeModal();
        }
      };

      const openModal = (event) => {
        dialog.showModal();
        document.body.classList.add('overflow-hidden');
        openBtn.disabled = true; // Ensure button is disabled after clicking to prevent repeated clicks

        // Try to animate opening
        dialog.animate(
          {
            clipPath: [
              'polygon(0 0, 100% 0, 100% -200%, -200% -200%)',
              'polygon(0 0, 100% 0, 100% 100%, 0% 100%)'
            ],
            opacity: [0, 1]
          },
          { duration: 200, easing: 'ease-out' }
        );

        window.addEventListener('click', onWindowClick);
        window.addEventListener('keydown', handleEscKey);
        event?.stopPropagation();
      };

      const closeModal = () => {
        dialog.close();
        document.body.classList.remove('overflow-hidden');
        openBtn.disabled = false;
        window.removeEventListener('click', onWindowClick);
        window.removeEventListener('keydown', handleEscKey);
      };

      // Setup event listeners
      openBtn.addEventListener('click', openModal);
      closeBtn.addEventListener('click', closeModal);
      document.addEventListener('astro:after-swap', closeModal);

      // Listen for `/` keyboard shortcut
      window.addEventListener('keydown', (e) => {
        if (e.key === '/' && !dialog.open) {
          openModal();
          e.preventDefault();
        }
      });

      // Initialize Pagefind
      const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1));
      onIdle(async () => {
        try {
          const { PagefindUI } = await import('@pagefind/default-ui');
          new PagefindUI({
            element: '#pagefind__search',
            baseUrl: import.meta.env.BASE_URL,
            bundlePath: `${import.meta.env.BASE_URL.replace(/\/$/, '')}/pagefind/`,
            showImages: false
          });
        } catch (error) {
          console.error('PageFind initialization error:', error);
        }
      });
    }
  }

  customElements.define('site-search', SiteSearch);
</script>

<style is:global>
  .dark {
    --pagefind-ui-primary: #eeeeee;
    --pagefind-ui-text: #eeeeee;
    --pagefind-ui-background: #152028;
    --pagefind-ui-border: #152028;
    --pagefind-ui-tag: #152028;
  }

  /* Estilos adicionales para mejorar la accesibilidad y UX */
  .dialog-frame:focus {
    outline: none;
  }

  @media (max-width: 640px) {
    dialog {
      margin: 0;
      max-height: 100vh;
      max-width: 100vw;
    }
  }
</style>
